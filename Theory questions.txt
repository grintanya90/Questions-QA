1. Что подразумевается под тестовой средой.
     Среда тестирования — это настройка программного и аппаратного обеспечения для групп тестирования для выполнения тестовых случаев.
Испытательный стенд или тестовая среда настраиваются в соответствии с требованиями тестируемого приложения. В некоторых случаях испытательный стенд может представлять собой комбинацию тестовой среды и тестовых данных, которые он использует.
     Для тестовой среды ключевая область для настройки включает в себя:
*Система и приложения
*Тестовые данные
*Сервер базы данных
*Фронтальная рабочая среда
*Клиентская операционная система
*Браузер
*Аппаратное обеспечение включает операционную систему сервера
*Сеть
*Документация, такая как справочные документы, руководства по конфигурации,руководства по установке,руководства пользователя
     Список действий функции управления тестовой средой включает в себя:
1)Поддержка центрального репозитория со всеми обновленными версиями тестовых сред
2)Управление средой тестирования в соответствии с требованиями команды тестирования
3)Согласно новым требованиям, создающим новые среды
4)Мониторинг окружающей среды
5)Обновление / удаление устаревших тестовых сред
6)Исследование проблем окружающей среды
7)Координация до разрешения вопроса.
     Испытательный стенд - это среда разработки программного обеспечения. Это позволяет разработчикам тестировать свои модули, не затрагивая рабочие серверы. Стенд предназначен не только для разработчиков, но и для тестировщиков. Это также называется тестовой средой.


2. В чем отличие build от release
Билд это номер, даваемый ПО при передаче от разработчиков тестировщикам. Релиз — это номер, даваемый ПО при передаче конечному пользователю.


3. Основные фазы тестирования?
   Pre-Alpha: ПО является прототипом. Пользовательский интерфейс завершен, но не все функции завершены. На данном этапе ПО не публикуется. 
   Alpha: является ранней версией программного продукта. Цель - вовлечь клиента в процесс разработки. Хороший Альфа-тест должен иметь четко определенный план тестирования с комплексными тестовыми примерами. Это дает лучшее представление о надежности программного обеспечения на ранних стадиях. В некоторых случаях тестирование может быть передано на аутсорс. 
   Beta: ПО стабильно и выпускается для ограниченной пользовательской базы. Цель состоит в том, чтобы получить отзывы клиентов о продукте и внести соответствующие изменения в ПО. 
   Release Candidate (RC): основываясь на отзывах Beta Test, вы вносите изменения в ПО и хотите проверить исправления ошибок. На этом этапе вы не хотите вносить радикальные изменения в функциональность, а просто проверяете наличие ошибок. RC также выпущен для пользователей.
   Release: Все работает, ПО выпущено для пользователей. 


4. Что такое импакт анализ?
     Основная идея импакт анализа — это указание затронутых мест в проекте при разработке новой или изменении старой функциональности. Во время разработки часто возникают ситуации, когда вносишь изменения в одном месте, а это влияет либо на весь проект либо на несколько мест в проекте. При таких изменениях сложно вспомнить и протестировать все необходимые места, особенно если они не покрыты тестами. В результате этого, после сдачи очередного релиза, клиенты начинают обращаться с жалобами на то, что что-то поломалось или не работает.
     Импакт анализ может быть полезным в следующих случаях:
*есть изменения в требованиях;
*получен запрос на внесение изменений в продукт;
*ожидается внедрение нового модуля или функциональности в существующий продукт;
*каждый раз, когда есть изменения в существующих модулях или функциональностях продукта.
Как мы знаем, в настоящее время продукты становятся всё более большими и комплексными, а компоненты всё чаще зависят друг от друга. Изменение строчки кода в таком проекте может "сломать" абсолютно всё.